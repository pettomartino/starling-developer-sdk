{"version":3,"sources":["node_modules/browser-pack/_prelude.js","starling.js","src/entities/account.js","src/entities/address.js","src/entities/card.js","src/entities/contact.js","src/entities/customer.js","src/entities/mandate.js","src/entities/oauth.js","src/entities/payment.js","src/entities/savingsGoals.js","src/entities/transaction.js","src/entities/whoAmI.js","src/starling.js","src/utils/http.js","src/utils/validator.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","starling","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","factory","mod","axios","debug","http","validator","account","_axios","_debug","_http","_validator","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_axios2","_debug2","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","log","Account","options","value","accessToken","typeValidation","arguments","getAccountParameterDefinition","url","apiUrl","method","headers","defaultHeaders","getBalanceParameterDefinition","name","validations","../utils/http","../utils/validator","undefined","2","address","Address","getAddressParameterDefinition","3","card","Card","getCardParameterDefinition","4","contact","Contact","getContactsParameterDefinition","contactId","getContactAccountParameterDefinition","accountType","accountNumber","sortCode","customerId","createContactParameterDefinition","postHeaders","data","JSON","stringify","deleteContactParameterDefinition","5","customer","Customer","getCustomerParameterDefinition","6","mandate","Mandate","listMandatesParameterDefinition","mandateId","deleteMandateParameterDefinition","7","oauth","ACCESS_TOKEN_GRANT_TYPE","REFRESH_TOKEN_GRANT_TYPE","OAuth","authorizationCode","authorizationCodeParameterDefinition","getOAuthToken","grant_type","client_id","clientId","client_secret","clientSecret","redirect_uri","redirectUri","refreshToken","refreshTokenParameterDefinition","refresh_token","params","oauthUrl","Content-Type","Accept","8","payment","Payment","destinationAccountUid","reference","amount","currency","makeLocalPaymentParameterDefinition","listScheduledPaymentsParameterDefinition","9","savingsGoals","SavingsGoals","listSavingsGoalsParameterDefinition","savingsGoalId","getSavingsGoalParameterDefinition","targetAmount","targetCurrency","base64EncodedPhoto","createSavingsGoalParameterDefinition","deleteSavingsGoalParameterDefinition","transactionId","addMoneySavingsGoalParameterDefinition","minorUnits","10","transaction","transactionSource","source","Transaction","fromDate","toDate","getTransactionsParameterDefinition","from","to","getTransactionParameterDefinition","11","whoAmI","WhoAmI","getMeParameterDefinition","12","_customer","_account","_address","_transaction","_card","_oauth","_contact","_payment","_mandate","_savingsGoals","_whoAmI","_customer2","_account2","_address2","_transaction2","_card2","_oauth2","_contact2","_payment2","_mandate2","_savingsGoals2","_whoAmI2","Starling","defaults","config","assign","oAuth","getMe","getCustomer","getAccount","getBalance","getAddresses","getTransactions","getTransaction","listMandates","deleteMandate","listScheduledPayments","makeLocalPayment","getContacts","getContactAccount","createContact","deleteContact","listSavingsGoals","getSavingsGoal","addMoneyToSavingsGoal","createSavingsGoal","deleteSavingsGoal","getCard","getAccessToken","refreshAccessToken","./entities/account","./entities/address","./entities/card","./entities/contact","./entities/customer","./entities/mandate","./entities/oauth","./entities/payment","./entities/savingsGoals","./entities/transaction","./entities/whoAmI","13","Authorization","14","_typeof","Symbol","iterator","constructor","runRules","pos","rules","valueType","args","def","problems","problem","push"],"mappings":"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","file":"starling.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.starling = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.account = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:account-service');\n\n  /**\n   * Service to interact with a customer's account\n   */\n\n  var Account = function () {\n\n    /**\n     * Creates an instance of the account client\n     * @param {Object} options - application config\n     */\n    function Account(options) {\n      _classCallCheck(this, Account);\n\n      this.options = options;\n    }\n\n    /**\n     * Retrieves a customer's account\n     * @param {string} accessToken - the oauth bearer token\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Account, [{\n      key: 'getAccount',\n      value: function getAccount(accessToken) {\n        (0, _validator.typeValidation)(arguments, getAccountParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/accounts';\n        log('GET ' + url);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'getBalance',\n      value: function getBalance(accessToken) {\n        (0, _validator.typeValidation)(arguments, getBalanceParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/accounts/balance';\n        log('GET ' + url);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Account;\n  }();\n\n  var getAccountParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  var getBalanceParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  module.exports = Account;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],2:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.address = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:address-service');\n\n  /**\n   * Service to interact with a customer address\n   */\n\n  var Address = function () {\n\n    /**\n     * Creates an instance of the address client\n     * @param {Object} options - configuration parameters\n     */\n    function Address(options) {\n      _classCallCheck(this, Address);\n\n      this.options = options;\n    }\n\n    /**\n     * Retrieves a customer's address\n     * @param {string} accessToken - the oauth bearer token.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Address, [{\n      key: 'getAddresses',\n      value: function getAddresses(accessToken) {\n        (0, _validator.typeValidation)(arguments, getAddressParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/addresses';\n        log('GET ' + url);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Address;\n  }();\n\n  var getAddressParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  module.exports = Address;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],3:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.card = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:card-service');\n\n  /**\n   * Service to interact with a customer card\n   */\n\n  var Card = function () {\n\n    /**\n     * Creates an instance of the client's card\n     * @param {Object} options - configuration parameters\n     */\n    function Card(options) {\n      _classCallCheck(this, Card);\n\n      this.options = options;\n    }\n\n    /**\n     * Retrieves a customer's card\n     * @param {string} accessToken - the oauth bearer token.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Card, [{\n      key: 'getCard',\n      value: function getCard(accessToken) {\n        (0, _validator.typeValidation)(arguments, getCardParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/cards';\n        log('GET ' + url);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Card;\n  }();\n\n  var getCardParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  module.exports = Card;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],4:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.contact = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:contact-service');\n\n  /**\n   * Service to interact with a customer's contacts (payees)\n   */\n\n  var Contact = function () {\n\n    /**\n     * Create a new contact service\n     * @param {Object} options - configuration parameters\n     */\n    function Contact(options) {\n      _classCallCheck(this, Contact);\n\n      this.options = options;\n    }\n\n    /**\n     * Gets the customer's contacts (payees)\n     * @param {string} accessToken - the oauth bearer token.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Contact, [{\n      key: 'getContacts',\n      value: function getContacts(accessToken) {\n        (0, _validator.typeValidation)(arguments, getContactsParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/contacts';\n        log('GET ' + url);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'getContactAccount',\n      value: function getContactAccount(accessToken, contactId) {\n        (0, _validator.typeValidation)(arguments, getContactAccountParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/contacts/' + contactId + '/accounts';\n        log('GET ' + url);\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'createContact',\n      value: function createContact(accessToken, name, accountType, accountNumber, sortCode, customerId) {\n        (0, _validator.typeValidation)(arguments, createContactParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/contacts';\n        log('POST ' + url);\n        return (0, _axios2.default)({\n          method: 'POST',\n          url: url,\n          headers: (0, _http.postHeaders)(accessToken),\n          data: JSON.stringify({\n            name: name,\n            accountType: accountType,\n            accountNumber: accountNumber,\n            sortCode: sortCode,\n            customerId: customerId\n          })\n        });\n      }\n    }, {\n      key: 'deleteContact',\n      value: function deleteContact(accessToken, contactId) {\n        (0, _validator.typeValidation)(arguments, deleteContactParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/contacts/' + contactId;\n        log('DELETE ' + url);\n        return (0, _axios2.default)({\n          method: 'DELETE',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Contact;\n  }();\n\n  var getContactsParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  var getContactAccountParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'contactId', validations: ['required', 'string'] }];\n\n  var createContactParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'name', validations: ['required', 'string'] }, { name: 'accountType', validations: ['required', 'string'] }, { name: 'accountNumber', validations: ['required', 'string'] }, { name: 'sortCode', validations: ['required', 'string'] }, { name: 'customerId', validations: ['optional', 'string'] }];\n\n  var deleteContactParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'contactId', validations: ['required', 'string'] }];\n\n  module.exports = Contact;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],5:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.customer = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:customer-service');\n\n  /**\n   * Service to interact with a customer\n   */\n\n  var Customer = function () {\n\n    /**\n     * Create a new customer service\n     * @param {Object} options - configuration parameters\n     */\n    function Customer(options) {\n      _classCallCheck(this, Customer);\n\n      this.options = options;\n    }\n\n    /**\n     * Gets the customer's details\n     * @param {string} accessToken - the oauth bearer token.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Customer, [{\n      key: 'getCustomer',\n      value: function getCustomer(accessToken) {\n        (0, _validator.typeValidation)(arguments, getCustomerParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/customers';\n        log('GET ' + url);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Customer;\n  }();\n\n  var getCustomerParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  module.exports = Customer;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],6:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.mandate = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:mandate-service');\n\n  /**\n   * Service to interact with a customer's transactions\n   */\n\n  var Mandate = function () {\n    /**\n     * Create a new transaction service\n     * @param {Object} options - configuration parameters\n     */\n    function Mandate(options) {\n      _classCallCheck(this, Mandate);\n\n      this.options = options;\n    }\n\n    /**\n     * Gets a list of the customer's current direct debit mandates\n     * @param {string} accessToken - the oauth bearer token.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Mandate, [{\n      key: 'listMandates',\n      value: function listMandates(accessToken) {\n        (0, _validator.typeValidation)(arguments, listMandatesParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/direct-debit/mandates';\n        log('GET ' + url);\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'deleteMandate',\n      value: function deleteMandate(accessToken, mandateId) {\n        (0, _validator.typeValidation)(arguments, deleteMandateParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/direct-debit/mandates/' + mandateId;\n        log('DELETE ' + url);\n        return (0, _axios2.default)({\n          method: 'DELETE',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Mandate;\n  }();\n\n  var listMandatesParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  var deleteMandateParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'mandateId', validations: ['required', 'string'] }];\n\n  module.exports = Mandate;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],7:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.validator);\n    global.oauth = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var ACCESS_TOKEN_GRANT_TYPE = 'authorization_code';\n  var REFRESH_TOKEN_GRANT_TYPE = 'refresh_token';\n\n  var log = (0, _debug2.default)('starling:oauth-service');\n\n  /**\n   * Service to interact with a the oauth endpoint\n   */\n\n  var OAuth = function () {\n\n    /**\n     * Create a new oauth service\n     * @param {Object} options - configuration parameters\n     */\n    function OAuth(options) {\n      _classCallCheck(this, OAuth);\n\n      this.options = options;\n    }\n\n    /**\n     * Exchanges the authorization code for an access token\n     * @param {string} authorizationCode - the authorization code, acquired from the user agent after the\n     * user authenticates with starling\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(OAuth, [{\n      key: 'getAccessToken',\n      value: function getAccessToken(authorizationCode) {\n        (0, _validator.typeValidation)(arguments, authorizationCodeParameterDefinition);\n        return this.getOAuthToken({\n          'code': authorizationCode,\n          'grant_type': ACCESS_TOKEN_GRANT_TYPE,\n          'client_id': this.options.clientId,\n          'client_secret': this.options.clientSecret,\n          'redirect_uri': this.options.redirectUri\n        });\n      }\n    }, {\n      key: 'refreshAccessToken',\n      value: function refreshAccessToken(refreshToken) {\n        (0, _validator.typeValidation)(arguments, refreshTokenParameterDefinition);\n        return this.getOAuthToken({\n          'refresh_token': refreshToken,\n          'grant_type': REFRESH_TOKEN_GRANT_TYPE,\n          'client_id': this.options.clientId,\n          'client_secret': this.options.clientSecret\n        });\n      }\n    }, {\n      key: 'getOAuthToken',\n      value: function getOAuthToken(params) {\n        if (!this.options.clientId) {\n          throw Error('clientId is not configured');\n        }\n\n        if (!this.options.clientSecret) {\n          throw Error('clientSecret is not configured');\n        }\n\n        var url = this.options.oauthUrl + '/oauth/access-token';\n        log('POST ' + url + ' queryParams:' + JSON.stringify(params));\n\n        return (0, _axios2.default)({\n          url: url,\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Accept: 'application/json'\n          },\n          params: params\n        });\n      }\n    }]);\n\n    return OAuth;\n  }();\n\n  var refreshTokenParameterDefinition = [{ name: 'refreshToken', validations: ['required', 'string'] }];\n\n  var authorizationCodeParameterDefinition = [{ name: 'authorizationCode', validations: ['required', 'string'] }];\n\n  module.exports = OAuth;\n});\n\n},{\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],8:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.payment = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:payment-service');\n\n  /**\n   * Service to interact with a customer's transactions\n   */\n\n  var Payment = function () {\n    /**\n     * Create a new transaction service\n     * @param {Object} options - configuration parameters\n     */\n    function Payment(options) {\n      _classCallCheck(this, Payment);\n\n      this.options = options;\n    }\n\n    /**\n     * Makes a payment on behalf of the customer to another UK bank account using the Faster Payments network\n     * @param {string} accessToken - the oauth bearer token.\n     *  @param {string} destinationAccountUid - the account identifier of the recipient\n     * @param {string} reference - The payment reference, max. 18 characters.\n     * @param {string} amount - the amount to be send.\n     * @param {string=} currency - the currency, optional, defaults to \"GBP\".\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Payment, [{\n      key: 'makeLocalPayment',\n      value: function makeLocalPayment(accessToken, destinationAccountUid, reference, amount, currency) {\n        (0, _validator.typeValidation)(arguments, makeLocalPaymentParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/payments/local';\n        log('POST ' + url);\n        return (0, _axios2.default)({\n          method: 'POST',\n          url: url,\n          headers: (0, _http.postHeaders)(accessToken),\n          data: JSON.stringify({\n            destinationAccountUid: destinationAccountUid,\n            payment: {\n              amount: amount,\n              currency: currency\n            },\n            reference: reference\n          })\n        });\n      }\n    }, {\n      key: 'listScheduledPayments',\n      value: function listScheduledPayments(accessToken) {\n        (0, _validator.typeValidation)(arguments, listScheduledPaymentsParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/payments/scheduled';\n        log('GET ' + url);\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Payment;\n  }();\n\n  var makeLocalPaymentParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'destinationAccountUid', validations: ['required', 'string'] }, { name: 'reference', validations: ['required', 'string'] }, { name: 'amount', validations: ['required', 'string'] }, { name: 'currency', validations: ['optional', 'string'] }];\n\n  var listScheduledPaymentsParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  module.exports = Payment;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],9:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.savingsGoals = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:saving-goals-service');\n\n  /**\n   * Service to interact with a customer's savings goals\n   */\n\n  var SavingsGoals = function () {\n    /**\n     * Create a new savings goal service\n     * @param {Object} options - configuration parameters\n     */\n    function SavingsGoals(options) {\n      _classCallCheck(this, SavingsGoals);\n\n      this.options = options;\n    }\n\n    /**\n     * Gets a list of the customer's savings goals\n     * @param {string} accessToken - the oauth bearer token.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(SavingsGoals, [{\n      key: 'listSavingsGoals',\n      value: function listSavingsGoals(accessToken) {\n        (0, _validator.typeValidation)(arguments, listSavingsGoalsParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/savings-goals';\n        log('GET ' + url);\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'getSavingsGoal',\n      value: function getSavingsGoal(accessToken, savingsGoalId) {\n        (0, _validator.typeValidation)(arguments, getSavingsGoalParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/savings-goals/' + savingsGoalId;\n        log('GET ' + url);\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'createSavingsGoal',\n      value: function createSavingsGoal(accessToken, savingsGoalId, name, currency, targetAmount, targetCurrency, base64EncodedPhoto) {\n        (0, _validator.typeValidation)(arguments, createSavingsGoalParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/savings-goals/' + savingsGoalId;\n        log('PUT ' + url);\n        return (0, _axios2.default)({\n          method: 'PUT',\n          url: url,\n          headers: (0, _http.postHeaders)(accessToken),\n          data: JSON.stringify({\n            name: name,\n            currency: currency,\n            target: {\n              targetAmount: targetAmount,\n              targetCurrency: targetCurrency\n            },\n            base64EncodedPhoto: base64EncodedPhoto\n          })\n        });\n      }\n    }, {\n      key: 'deleteSavingsGoal',\n      value: function deleteSavingsGoal(accessToken, savingsGoalId) {\n        (0, _validator.typeValidation)(arguments, deleteSavingsGoalParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/savings-goals/' + savingsGoalId;\n        log('DELETE ' + url);\n        return (0, _axios2.default)({\n          method: 'DELETE',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'addMoneyToSavingsGoal',\n      value: function addMoneyToSavingsGoal(accessToken, savingsGoalId, transactionId, amount, currency) {\n        (0, _validator.typeValidation)(arguments, addMoneySavingsGoalParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/savings-goals/' + savingsGoalId + '/add-money/' + transactionId;\n        log('PUT ' + url);\n        return (0, _axios2.default)({\n          method: 'PUT',\n          url: url,\n          headers: (0, _http.postHeaders)(accessToken),\n          data: JSON.stringify({\n            amount: {\n              currency: currency,\n              minorUnits: amount\n            }\n          })\n        });\n      }\n    }]);\n\n    return SavingsGoals;\n  }();\n\n  var listSavingsGoalsParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  var getSavingsGoalParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'savingsGoalId', validations: ['required', 'string'] }];\n\n  var deleteSavingsGoalParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'savingsGoalId', validations: ['required', 'string'] }];\n\n  var createSavingsGoalParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'savingsGoalId', validations: ['required', 'string'] }, { name: 'name', validations: ['required', 'string'] }, { name: 'currency', validations: ['required', 'string'] }, { name: 'targetAmount', validations: ['optional', 'number'] }, { name: 'targetCurrency', validations: ['optional', 'string'] }, { name: 'base64EncodedPhoto', validations: ['optional', 'string'] }];\n\n  var addMoneySavingsGoalParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'savingsGoalId', validations: ['required', 'string'] }, { name: 'transactionId', validations: ['required', 'string'] }, { name: 'amount', validations: ['required', 'number'] }];\n\n  module.exports = SavingsGoals;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],10:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.transaction = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:transaction-service');\n\n  var transactionSource = function transactionSource(source) {\n    if (source === 'MASTER_CARD') {\n      return '/mastercard';\n    } else if (source === 'FASTER_PAYMENTS_IN') {\n      return '/fps/in';\n    } else if (source === 'FASTER_PAYMENTS_OUT') {\n      return '/fps/out';\n    } else if (source === 'DIRECT_DEBIT') {\n      return '/direct-debit';\n    } else {\n      return '';\n    }\n  };\n\n  /**\n   * Service to interact with a customer's transactions\n   */\n\n  var Transaction = function () {\n    /**\n     * Create a new transaction service\n     * @param {Object} options - configuration parameters\n     */\n    function Transaction(options) {\n      _classCallCheck(this, Transaction);\n\n      this.options = options;\n    }\n\n    /**\n     * Gets the customer's transactions over the given period\n     * @param {string} accessToken - the oauth bearer token.\n     * @param {string} fromDate - filter transactions after this date. Format: YYYY-MM-DD\n     * @param {string} toDate - filter transactions before this date. Format: YYYY-MM-DD\n     * @param {string=} source - the transaction type (e.g. faster payments, mastercard).\n     * If not specified, results are not filtered by source.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Transaction, [{\n      key: 'getTransactions',\n      value: function getTransactions(accessToken, fromDate, toDate, source) {\n        (0, _validator.typeValidation)(arguments, getTransactionsParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/transactions' + transactionSource(source);\n        log('GET ' + url + ' from=' + fromDate + ' to=' + toDate);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          params: {\n            from: fromDate,\n            to: toDate\n          },\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }, {\n      key: 'getTransaction',\n      value: function getTransaction(accessToken, transactionId, source) {\n        (0, _validator.typeValidation)(arguments, getTransactionParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/transactions' + transactionSource(source) + '/' + transactionId;\n        log('GET ' + url);\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return Transaction;\n  }();\n\n  var getTransactionsParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'fromDate', validations: ['optional', 'string'] }, { name: 'toDate', validations: ['optional', 'string'] }, { name: 'source', validations: ['optional', 'string'] }];\n\n  var getTransactionParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'transactionId', validations: ['required', 'string'] }, { name: 'source', validations: ['optional', 'string'] }];\n\n  module.exports = Transaction;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],11:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.axios, global.debug, global.http, global.validator);\n    global.whoAmI = mod.exports;\n  }\n})(this, function (module, _axios, _debug, _http, _validator) {\n  'use strict';\n\n  var _axios2 = _interopRequireDefault(_axios);\n\n  var _debug2 = _interopRequireDefault(_debug);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var log = (0, _debug2.default)('starling:who-am-i-service');\n\n  /**\n   * Service to interact with the Who Am I endpoint\n   */\n\n  var WhoAmI = function () {\n\n    /**\n     * Creates an instance of the who am I client\n     * @param {Object} options - configuration parameters\n     */\n    function WhoAmI(options) {\n      _classCallCheck(this, WhoAmI);\n\n      this.options = options;\n    }\n\n    /**\n     * Retrieves the customer UUID and permissions corresponding to the access token passed\n     * @param {string} accessToken - the oauth bearer token.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(WhoAmI, [{\n      key: 'getMe',\n      value: function getMe(accessToken) {\n        (0, _validator.typeValidation)(arguments, getMeParameterDefinition);\n        var url = this.options.apiUrl + '/api/v1/me';\n        log('GET ' + url);\n\n        return (0, _axios2.default)({\n          method: 'GET',\n          url: url,\n          headers: (0, _http.defaultHeaders)(accessToken)\n        });\n      }\n    }]);\n\n    return WhoAmI;\n  }();\n\n  var getMeParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];\n\n  module.exports = WhoAmI;\n});\n\n},{\"../utils/http\":13,\"../utils/validator\":14,\"axios\":undefined,\"debug\":undefined}],12:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', './entities/customer', './entities/account', './entities/address', './entities/transaction', './entities/card', './entities/oauth', './entities/contact', './entities/payment', './entities/mandate', './entities/savingsGoals', './entities/whoAmI'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, require('./entities/customer'), require('./entities/account'), require('./entities/address'), require('./entities/transaction'), require('./entities/card'), require('./entities/oauth'), require('./entities/contact'), require('./entities/payment'), require('./entities/mandate'), require('./entities/savingsGoals'), require('./entities/whoAmI'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, global.customer, global.account, global.address, global.transaction, global.card, global.oauth, global.contact, global.payment, global.mandate, global.savingsGoals, global.whoAmI);\n    global.starling = mod.exports;\n  }\n})(this, function (module, _customer, _account, _address, _transaction, _card, _oauth, _contact, _payment, _mandate, _savingsGoals, _whoAmI) {\n  'use strict';\n\n  var _customer2 = _interopRequireDefault(_customer);\n\n  var _account2 = _interopRequireDefault(_account);\n\n  var _address2 = _interopRequireDefault(_address);\n\n  var _transaction2 = _interopRequireDefault(_transaction);\n\n  var _card2 = _interopRequireDefault(_card);\n\n  var _oauth2 = _interopRequireDefault(_oauth);\n\n  var _contact2 = _interopRequireDefault(_contact);\n\n  var _payment2 = _interopRequireDefault(_payment);\n\n  var _mandate2 = _interopRequireDefault(_mandate);\n\n  var _savingsGoals2 = _interopRequireDefault(_savingsGoals);\n\n  var _whoAmI2 = _interopRequireDefault(_whoAmI);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var Starling = function () {\n\n    /**\n     * Create an instance of the starling client\n     * @param {Object=} options - configuration parameters\n     */\n    function Starling(options) {\n      _classCallCheck(this, Starling);\n\n      var defaults = {\n        apiUrl: 'https://api.starlingbank.com',\n        oauthUrl: 'https://oauth.starlingbank.com',\n        clientId: '',\n        clientSecret: ''\n      };\n\n      this.config = Object.assign({}, defaults, options);\n\n      this.whoAmI = new _whoAmI2.default(this.config);\n      this.customer = new _customer2.default(this.config);\n      this.account = new _account2.default(this.config);\n      this.address = new _address2.default(this.config);\n      this.transaction = new _transaction2.default(this.config);\n      this.payment = new _payment2.default(this.config);\n      this.mandate = new _mandate2.default(this.config);\n      this.contact = new _contact2.default(this.config);\n      this.card = new _card2.default(this.config);\n      this.savingsGoals = new _savingsGoals2.default(this.config);\n      this.oAuth = new _oauth2.default(this.config);\n    }\n\n    /**\n     * Gets the customer UUID and permissions corresponding to the access token passed\n     * @param {string=} accessToken - the oauth bearer token.  If not\n     * specified, the accessToken on the options object is used.\n     * @return {Promise} - the http request promise\n     */\n\n\n    _createClass(Starling, [{\n      key: 'getMe',\n      value: function getMe() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.whoAmI.getMe(accessToken);\n      }\n    }, {\n      key: 'getCustomer',\n      value: function getCustomer() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.customer.getCustomer(accessToken);\n      }\n    }, {\n      key: 'getAccount',\n      value: function getAccount() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.account.getAccount(accessToken);\n      }\n    }, {\n      key: 'getBalance',\n      value: function getBalance() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.account.getBalance(accessToken);\n      }\n    }, {\n      key: 'getAddresses',\n      value: function getAddresses() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.address.getAddresses(accessToken);\n      }\n    }, {\n      key: 'getTransactions',\n      value: function getTransactions() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var fromDate = arguments[1];\n        var toDate = arguments[2];\n        var source = arguments[3];\n\n        return this.transaction.getTransactions(accessToken, fromDate, toDate, source);\n      }\n    }, {\n      key: 'getTransaction',\n      value: function getTransaction() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var transactionId = arguments[1];\n        var source = arguments[2];\n\n        return this.transaction.getTransaction(accessToken, transactionId, source);\n      }\n    }, {\n      key: 'listMandates',\n      value: function listMandates() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.mandate.listMandates(accessToken);\n      }\n    }, {\n      key: 'deleteMandate',\n      value: function deleteMandate() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var mandateId = arguments[1];\n\n        return this.mandate.deleteMandate(accessToken, mandateId);\n      }\n    }, {\n      key: 'listScheduledPayments',\n      value: function listScheduledPayments() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.payment.listScheduledPayments(accessToken);\n      }\n    }, {\n      key: 'makeLocalPayment',\n      value: function makeLocalPayment() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var destinationAccountUid = arguments[1];\n        var reference = arguments[2];\n        var amount = arguments[3];\n        var currency = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'GBP';\n\n        return this.payment.makeLocalPayment(accessToken, destinationAccountUid, reference, amount, currency);\n      }\n    }, {\n      key: 'getContacts',\n      value: function getContacts() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.contact.getContacts(accessToken);\n      }\n    }, {\n      key: 'getContactAccount',\n      value: function getContactAccount() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var contactId = arguments[1];\n\n        return this.contact.getContactAccount(accessToken, contactId);\n      }\n    }, {\n      key: 'createContact',\n      value: function createContact() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var name = arguments[1];\n        var accountType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'UK_ACCOUNT_AND_SORT_CODE';\n        var accountNumber = arguments[3];\n        var sortCode = arguments[4];\n        var customerId = arguments[5];\n\n        return this.contact.createContact(accessToken, name, accountType, accountNumber, sortCode, customerId);\n      }\n    }, {\n      key: 'deleteContact',\n      value: function deleteContact(accessToken, contactId) {\n        return this.contact.deleteContact(accessToken, contactId);\n      }\n    }, {\n      key: 'listSavingsGoals',\n      value: function listSavingsGoals() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.savingsGoals.listSavingsGoals(accessToken);\n      }\n    }, {\n      key: 'getSavingsGoal',\n      value: function getSavingsGoal() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var savingsGoalId = arguments[1];\n\n        return this.savingsGoals.getSavingsGoal(accessToken, savingsGoalId);\n      }\n    }, {\n      key: 'addMoneyToSavingsGoal',\n      value: function addMoneyToSavingsGoal() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var savingsGoalId = arguments[1];\n        var transactionId = arguments[2];\n        var amount = arguments[3];\n        var currency = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'GBP';\n\n        return this.savingsGoals.addMoneyToSavingsGoal(accessToken, savingsGoalId, transactionId, amount, currency);\n      }\n    }, {\n      key: 'createSavingsGoal',\n      value: function createSavingsGoal() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n        var savingsGoalId = arguments[1];\n        var name = arguments[2];\n        var currency = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'GBP';\n        var targetAmount = arguments[4];\n        var targetCurrency = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'GBP';\n        var base64EncodedPhoto = arguments[6];\n\n        return this.savingsGoals.createSavingsGoal(accessToken, savingsGoalId, name, currency, targetAmount, targetCurrency, base64EncodedPhoto);\n      }\n    }, {\n      key: 'deleteSavingsGoal',\n      value: function deleteSavingsGoal(accessToken, savingsGoalId) {\n        return this.savingsGoals.deleteSavingsGoal(accessToken, savingsGoalId);\n      }\n    }, {\n      key: 'getCard',\n      value: function getCard() {\n        var accessToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.accessToken;\n\n        return this.card.getCard(accessToken);\n      }\n    }, {\n      key: 'getAccessToken',\n      value: function getAccessToken(authorizationCode) {\n        return this.oAuth.getAccessToken(authorizationCode);\n      }\n    }, {\n      key: 'refreshAccessToken',\n      value: function refreshAccessToken(refreshToken) {\n        return this.oAuth.refreshAccessToken(refreshToken);\n      }\n    }]);\n\n    return Starling;\n  }();\n\n  module.exports = Starling;\n});\n\n},{\"./entities/account\":1,\"./entities/address\":2,\"./entities/card\":3,\"./entities/contact\":4,\"./entities/customer\":5,\"./entities/mandate\":6,\"./entities/oauth\":7,\"./entities/payment\":8,\"./entities/savingsGoals\":9,\"./entities/transaction\":10,\"./entities/whoAmI\":11}],13:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.http = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var defaultHeaders = exports.defaultHeaders = function defaultHeaders(accessToken) {\n    return {\n      Accept: 'application/json',\n      Authorization: 'Bearer ' + accessToken\n    };\n  };\n\n  var postHeaders = exports.postHeaders = function postHeaders(accessToken) {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + accessToken\n    };\n  };\n});\n\n},{}],14:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.validator = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var runRules = function runRules(pos, name, rules, value) {\n    var valueType = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n    if (rules[0] == 'optional') {\n      if (value && valueType !== rules[1]) {\n        return name + ' parameter in position ' + pos + ' is an optional ' + rules[1] + ' but was ' + valueType;\n      }\n    }\n    if (rules[0] == 'required') {\n      if (value && valueType !== rules[1]) {\n        return name + ' parameter in position ' + pos + ' is a required ' + rules[1] + ' but was ' + valueType;\n      } else if (!value) {\n        return name + ' parameter in position ' + pos + ' is a required ' + rules[1] + ' but was ' + value;\n      }\n    }\n  };\n\n  var typeValidation = exports.typeValidation = function typeValidation(args, def) {\n    var problems = [];\n    for (var i = 0; i < def.length; i++) {\n      var pos = i;\n      var name = def[i].name;\n      var rules = def[i].validations;\n      var value = i <= args.length ? args[i] : undefined;\n      var problem = runRules(pos, name, rules, value);\n      if (problem) problems.push(problem);\n    }\n\n    if (problems.length) {\n      throw problems;\n    }\n  };\n});\n\n},{}]},{},[12])(12)\n});\n\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:account-service');\n\n/**\n * Service to interact with a customer's account\n */\nclass Account {\n\n  /**\n   * Creates an instance of the account client\n   * @param {Object} options - application config\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Retrieves a customer's account\n   * @param {string} accessToken - the oauth bearer token\n   * @return {Promise} - the http request promise\n   */\n  getAccount (accessToken) {\n    typeValidation(arguments, getAccountParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/accounts`;\n    log(`GET ${url}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Retrieves the customer's balance\n   * @param {string} accessToken - the oauth bearer token\n   * @return {Promise} - the http request promise\n   */\n  getBalance (accessToken) {\n    typeValidation(arguments, getBalanceParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/accounts/balance`;\n    log(`GET ${url}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst getAccountParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n  ];\n\nconst getBalanceParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n  ];\n\nmodule.exports = Account;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:address-service');\n\n/**\n * Service to interact with a customer address\n */\nclass Address {\n\n  /**\n   * Creates an instance of the address client\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Retrieves a customer's address\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getAddresses (accessToken) {\n    typeValidation(arguments, getAddressParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/addresses`;\n    log(`GET ${url}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst getAddressParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n  ];\n\nmodule.exports = Address;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:card-service');\n\n/**\n * Service to interact with a customer card\n */\nclass Card {\n\n  /**\n   * Creates an instance of the client's card\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Retrieves a customer's card\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getCard (accessToken) {\n    typeValidation(arguments, getCardParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/cards`;\n    log(`GET ${url}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst getCardParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n  ];\n\nmodule.exports = Card;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders, postHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:contact-service');\n\n/**\n * Service to interact with a customer's contacts (payees)\n */\nclass Contact {\n\n  /**\n   * Create a new contact service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Gets the customer's contacts (payees)\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getContacts (accessToken) {\n    typeValidation(arguments, getContactsParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/contacts`;\n    log(`GET ${url}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Gets a specific contact's (payee) account details\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} contactId - the contact's ID.\n   * @return {Promise} - the http request promise\n   */\n  getContactAccount (accessToken, contactId) {\n    typeValidation(arguments, getContactAccountParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/contacts/${contactId}/accounts`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Creates a contact (payee) for the customer\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} name - the name of the new contact.\n   * @param {string} accountType - the account type (domestic or international).\n   * @param {string} accountNumber - the contact's bank account number.\n   * @param {string} sortCode - the contact's sort code.\n   * @param {string} customerId - the customer's ID. (optional)\n   * @return {Promise} - the http request promise\n   */\n  createContact (accessToken, name, accountType, accountNumber, sortCode, customerId) {\n    typeValidation(arguments, createContactParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/contacts`;\n    log(`POST ${url}`);\n    return axios({\n      method: 'POST',\n      url,\n      headers: postHeaders(accessToken),\n      data: JSON.stringify({\n        name,\n        accountType,\n        accountNumber,\n        sortCode,\n        customerId\n      }),\n    });\n  }\n\n\n  /**\n   * Deletes a specific contact (payee) from the customer's account\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} contactId - the Identifier of the contact to be deleted.\n   * @return {Promise} - the http request promise\n   */\n  deleteContact (accessToken, contactId) {\n    typeValidation(arguments, deleteContactParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/contacts/${contactId}`;\n    log(`DELETE ${url}`);\n    return axios({\n      method: 'DELETE',\n      url,\n      headers: defaultHeaders(accessToken),\n    });\n  }\n}\n\nconst getContactsParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n  ];\n\nconst getContactAccountParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']},\n  {name: 'contactId', validations: ['required', 'string']}\n  ];\n\nconst createContactParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']},\n  {name: 'name', validations: ['required', 'string']},\n  {name: 'accountType', validations: ['required', 'string']},\n  {name: 'accountNumber', validations: ['required', 'string']},\n  {name: 'sortCode', validations: ['required', 'string']},\n  {name: 'customerId', validations: ['optional', 'string']}\n  ];\n\nconst deleteContactParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']},\n  {name: 'contactId', validations: ['required', 'string']}\n];\n\nmodule.exports = Contact;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:customer-service');\n\n/**\n * Service to interact with a customer\n */\nclass Customer {\n\n  /**\n   * Create a new customer service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Gets the customer's details\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getCustomer (accessToken) {\n    typeValidation(arguments, getCustomerParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/customers`;\n    log(`GET ${url}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst getCustomerParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n  ];\n\nmodule.exports = Customer;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:mandate-service');\n\n\n/**\n * Service to interact with a customer's transactions\n */\nclass Mandate {\n  /**\n   * Create a new transaction service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Gets a list of the customer's current direct debit mandates\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  listMandates (accessToken) {\n    typeValidation(arguments, listMandatesParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/direct-debit/mandates`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Deletes specific direct debit mandate\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} mandateId - the unique mandate ID\n   * @return {Promise} - the http request promise\n   */\n  deleteMandate (accessToken, mandateId) {\n    typeValidation(arguments, deleteMandateParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/direct-debit/mandates/${mandateId}`;\n    log(`DELETE ${url}`);\n    return axios({\n      method: 'DELETE',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst listMandatesParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n];\n\nconst deleteMandateParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']},\n  {name: 'mandateId', validations: ['required', 'string']}\n];\n\nmodule.exports = Mandate;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {typeValidation} from '../utils/validator';\n\nconst ACCESS_TOKEN_GRANT_TYPE = 'authorization_code';\nconst REFRESH_TOKEN_GRANT_TYPE = 'refresh_token';\n\nconst log = debug('starling:oauth-service');\n\n/**\n * Service to interact with a the oauth endpoint\n */\nclass OAuth {\n\n  /**\n   * Create a new oauth service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Exchanges the authorization code for an access token\n   * @param {string} authorizationCode - the authorization code, acquired from the user agent after the\n   * user authenticates with starling\n   * @return {Promise} - the http request promise\n   */\n  getAccessToken (authorizationCode) {\n    typeValidation(arguments, authorizationCodeParameterDefinition);\n    return this.getOAuthToken({\n      'code': authorizationCode,\n      'grant_type': ACCESS_TOKEN_GRANT_TYPE,\n      'client_id': this.options.clientId,\n      'client_secret': this.options.clientSecret,\n      'redirect_uri': this.options.redirectUri\n    });\n  }\n\n  /**\n   * Exchanges the authorization code for an access token\n   * @param {string} refreshToken - the oauth refresh token, used when the access token\n   * expires to claim a new access token.\n   * @return {Promise} - the http request promise\n   */\n  refreshAccessToken (refreshToken) {\n    typeValidation(arguments, refreshTokenParameterDefinition);\n    return this.getOAuthToken({\n      'refresh_token': refreshToken,\n      'grant_type': REFRESH_TOKEN_GRANT_TYPE,\n      'client_id': this.options.clientId,\n      'client_secret': this.options.clientSecret\n    });\n  }\n\n  /**\n   * Gets the access token from the starling oauth endpoint\n   * @param {object} params - the query params passed to the oauth endpoint as per the oauth spec\n   * @return {Promise} - the http request promise\n   */\n  getOAuthToken (params) {\n    if (!this.options.clientId) {\n      throw Error('clientId is not configured');\n    }\n\n    if (!this.options.clientSecret) {\n      throw Error('clientSecret is not configured');\n    }\n\n    const url = `${this.options.oauthUrl}/oauth/access-token`;\n    log(`POST ${url} queryParams:${JSON.stringify(params)}`);\n\n    return axios({\n      url,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json'\n      },\n      params: params\n    });\n  }\n}\n\nconst refreshTokenParameterDefinition = [\n  {name: 'refreshToken', validations: ['required', 'string']}\n];\n\nconst authorizationCodeParameterDefinition = [\n  {name: 'authorizationCode', validations: ['required', 'string']}\n];\n\nmodule.exports = OAuth;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders, postHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:payment-service');\n\n\n/**\n * Service to interact with a customer's transactions\n */\nclass Payment {\n  /**\n   * Create a new transaction service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Makes a payment on behalf of the customer to another UK bank account using the Faster Payments network\n   * @param {string} accessToken - the oauth bearer token.\n   *  @param {string} destinationAccountUid - the account identifier of the recipient\n   * @param {string} reference - The payment reference, max. 18 characters.\n   * @param {string} amount - the amount to be send.\n   * @param {string=} currency - the currency, optional, defaults to \"GBP\".\n   * @return {Promise} - the http request promise\n   */\n  makeLocalPayment (accessToken, destinationAccountUid, reference, amount, currency) {\n    typeValidation(arguments, makeLocalPaymentParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/payments/local`;\n    log(`POST ${url}`);\n    return axios({\n      method: 'POST',\n      url,\n      headers: postHeaders(accessToken),\n      data: JSON.stringify({\n        destinationAccountUid,\n        payment: {\n          amount,\n          currency\n        },\n        reference\n      })\n    });\n  }\n\n\n  /**\n   * Lists the customer's scheduled payments\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  listScheduledPayments (accessToken) {\n    typeValidation(arguments, listScheduledPaymentsParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/payments/scheduled`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst makeLocalPaymentParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']},\n  {name: 'destinationAccountUid', validations: ['required', 'string']},\n  {name: 'reference', validations: ['required', 'string']},\n  {name: 'amount', validations: ['required', 'string']},\n  {name: 'currency', validations: ['optional', 'string']}\n];\n\nconst listScheduledPaymentsParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n];\n\nmodule.exports = Payment;\n","import axios from 'axios';\nimport debug from 'debug';\nimport { defaultHeaders, postHeaders } from '../utils/http';\nimport { typeValidation } from '../utils/validator';\n\nconst log = debug('starling:saving-goals-service');\n\n/**\n * Service to interact with a customer's savings goals\n */\nclass SavingsGoals {\n  /**\n   * Create a new savings goal service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Gets a list of the customer's savings goals\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  listSavingsGoals (accessToken) {\n    typeValidation(arguments, listSavingsGoalsParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Gets a specific savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID.\n   * @return {Promise} - the http request promise\n   */\n  getSavingsGoal (accessToken, savingsGoalId) {\n    typeValidation(arguments, getSavingsGoalParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals/${savingsGoalId}`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Creates a savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID, generate one if creating a goal.\n   * @param {string} name - the name of the new contact.\n   * @param {string} currency - the currency of the savings goal. Defaults to 'GBP'.\n   * @param {number} targetAmount - the target amount in minor units (e.g. 1234 => £12.34).\n   * @param {string} targetCurrency - the target currency, also defaults to 'GBP'.\n   * @param {string} base64EncodedPhoto - base64 encoded image to associate with the goal. (optional)\n   * @return {Promise} - the http request promise\n   */\n  createSavingsGoal (accessToken, savingsGoalId, name, currency, targetAmount, targetCurrency, base64EncodedPhoto) {\n    typeValidation(arguments, createSavingsGoalParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals/${savingsGoalId}`;\n    log(`PUT ${url}`);\n    return axios({\n      method: 'PUT',\n      url,\n      headers: postHeaders(accessToken),\n      data: JSON.stringify({\n        name,\n        currency,\n        target: {\n          targetAmount,\n          targetCurrency\n        },\n        base64EncodedPhoto\n      })\n    });\n  }\n\n  /**\n   * Deletes specific savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the unique mandate ID\n   * @return {Promise} - the http request promise\n   */\n  deleteSavingsGoal (accessToken, savingsGoalId) {\n    typeValidation(arguments, deleteSavingsGoalParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals/${savingsGoalId}`;\n    log(`DELETE ${url}`);\n    return axios({\n      method: 'DELETE',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Add money to a specific savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID.\n   * @param {string} transactionId - a transaction ID for this transaction\n   * @param {number} amount - an amount in minor unit\n   * @return {Promise} - the http request promise\n   */\n  addMoneyToSavingsGoal (accessToken, savingsGoalId, transactionId, amount, currency) {\n    typeValidation(arguments, addMoneySavingsGoalParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals/${savingsGoalId}/add-money/${transactionId}`;\n    log(`PUT ${url}`);\n    return axios({\n      method: 'PUT',\n      url,\n      headers: postHeaders(accessToken),\n      data: JSON.stringify({\n        amount: {\n          currency,\n          minorUnits: amount\n        }\n      })\n    });\n  }\n}\n\nconst listSavingsGoalsParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] }\n];\n\nconst getSavingsGoalParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] },\n  { name: 'savingsGoalId', validations: [ 'required', 'string' ] }\n];\n\nconst deleteSavingsGoalParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] },\n  { name: 'savingsGoalId', validations: [ 'required', 'string' ] }\n];\n\nconst createSavingsGoalParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] },\n  { name: 'savingsGoalId', validations: [ 'required', 'string' ] },\n  { name: 'name', validations: [ 'required', 'string' ] },\n  { name: 'currency', validations: [ 'required', 'string' ] },\n  { name: 'targetAmount', validations: [ 'optional', 'number' ] },\n  { name: 'targetCurrency', validations: [ 'optional', 'string' ] },\n  { name: 'base64EncodedPhoto', validations: [ 'optional', 'string' ] }\n];\n\nconst addMoneySavingsGoalParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] },\n  { name: 'savingsGoalId', validations: [ 'required', 'string' ] },\n  { name: 'transactionId', validations: [ 'required', 'string' ] },\n  { name: 'amount', validations: [ 'required', 'number' ] },\n];\n\nmodule.exports = SavingsGoals;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:transaction-service');\n\nconst transactionSource = (source) => {\n  if (source === 'MASTER_CARD') {\n    return '/mastercard';\n  } else if (source === 'FASTER_PAYMENTS_IN') {\n    return '/fps/in';\n  } else if (source === 'FASTER_PAYMENTS_OUT') {\n    return '/fps/out';\n  } else if (source === 'DIRECT_DEBIT') {\n    return '/direct-debit';\n  } else {\n    return ''\n  }\n};\n\n/**\n * Service to interact with a customer's transactions\n */\nclass Transaction {\n  /**\n   * Create a new transaction service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Gets the customer's transactions over the given period\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} fromDate - filter transactions after this date. Format: YYYY-MM-DD\n   * @param {string} toDate - filter transactions before this date. Format: YYYY-MM-DD\n   * @param {string=} source - the transaction type (e.g. faster payments, mastercard).\n   * If not specified, results are not filtered by source.\n   * @return {Promise} - the http request promise\n   */\n  getTransactions (accessToken, fromDate, toDate, source) {\n    typeValidation(arguments, getTransactionsParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/transactions${transactionSource(source)}`;\n    log(`GET ${url} from=${fromDate} to=${toDate}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      params: {\n        from: fromDate,\n        to: toDate\n      },\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Gets the full details of a single transaction\n   * @param {string} accessToken - the oauth bearer token\n   * @param {string} transactionId - the unique transaction ID\n   * @param {string=} source - the transaction type (e.g. faster payments, mastercard).\n   * If not specified, only generic transaction information will be returned.\n   * @return {Promise} - the http request promise\n   */\n  getTransaction (accessToken, transactionId, source) {\n    typeValidation(arguments, getTransactionParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/transactions${transactionSource(source)}/${transactionId}`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst getTransactionsParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']},\n  {name: 'fromDate', validations: ['optional', 'string']},\n  {name: 'toDate', validations: ['optional', 'string']},\n  {name: 'source', validations: ['optional', 'string']}\n];\n\nconst getTransactionParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']},\n  {name: 'transactionId', validations: ['required', 'string']},\n  {name: 'source', validations: ['optional', 'string']}\n];\n\nmodule.exports = Transaction;\n","import axios from 'axios';\nimport debug from 'debug';\nimport {defaultHeaders} from '../utils/http';\nimport {typeValidation} from '../utils/validator';\n\nconst log = debug('starling:who-am-i-service');\n\n/**\n * Service to interact with the Who Am I endpoint\n */\nclass WhoAmI {\n\n  /**\n   * Creates an instance of the who am I client\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Retrieves the customer UUID and permissions corresponding to the access token passed\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getMe (accessToken) {\n    typeValidation(arguments, getMeParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/me`;\n    log(`GET ${url}`);\n\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst getMeParameterDefinition = [\n  {name: 'accessToken', validations: ['required', 'string']}\n  ];\n\nmodule.exports = WhoAmI;\n","import Customer from './entities/customer';\nimport Account from './entities/account';\nimport Address from './entities/address';\nimport Transaction from './entities/transaction';\nimport Card from './entities/card';\nimport OAuth from './entities/oauth';\nimport Contact from './entities/contact';\nimport Payment from './entities/payment';\nimport Mandate from './entities/mandate';\nimport SavingsGoals from './entities/savingsGoals';\nimport WhoAmI from './entities/whoAmI';\n\n/**\n * Facade to dispatch operations to services\n */\nclass Starling {\n\n  /**\n   * Create an instance of the starling client\n   * @param {Object=} options - configuration parameters\n   */\n  constructor (options) {\n    const defaults = {\n      apiUrl: 'https://api.starlingbank.com',\n      oauthUrl: 'https://oauth.starlingbank.com',\n      clientId: '',\n      clientSecret: ''\n    };\n\n    this.config = Object.assign({}, defaults, options);\n\n    this.whoAmI = new WhoAmI(this.config);\n    this.customer = new Customer(this.config);\n    this.account = new Account(this.config);\n    this.address = new Address(this.config);\n    this.transaction = new Transaction(this.config);\n    this.payment = new Payment(this.config);\n    this.mandate = new Mandate(this.config);\n    this.contact = new Contact(this.config);\n    this.card = new Card(this.config);\n    this.savingsGoals = new SavingsGoals(this.config);\n    this.oAuth = new OAuth(this.config);\n  }\n\n  /**\n   * Gets the customer UUID and permissions corresponding to the access token passed\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @return {Promise} - the http request promise\n   */\n  getMe (accessToken = this.config.accessToken) {\n    return this.whoAmI.getMe(accessToken);\n  }\n\n  /**\n   * Gets the customer's details\n   * @param {string=} accessToken - the oauth bearer token. If not\n   * specified, the accessToken on the options object is used.\n   * @return {Promise} - the http request promise\n   */\n  getCustomer (accessToken = this.config.accessToken) {\n    return this.customer.getCustomer(accessToken);\n  }\n\n  /**\n   * Gets the customer's account details\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @return {Promise} - the http request promise\n   */\n  getAccount (accessToken = this.config.accessToken) {\n    return this.account.getAccount(accessToken);\n  }\n\n  /**\n   * Gets the customer's balance\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @return {Promise} - the http request promise\n   */\n  getBalance (accessToken = this.config.accessToken) {\n    return this.account.getBalance(accessToken);\n  }\n\n  /**\n   * Gets the customer's addresses (current and previous)\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @return {Promise} - the http request promise\n   */\n  getAddresses (accessToken = this.config.accessToken) {\n    return this.address.getAddresses(accessToken);\n  }\n\n  /**\n   * Gets the customer's transaction history\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @param {string} fromDate - filter transactions after this date. Format: YYYY-MM-DD (optional,\n   *   defaults to most recent 100 transactions)\n   * @param {string} toDate - filter transactions before this date. Format: YYYY-MM-DD (optional,\n   *   defaults to current date if not provided)\n   * @param {string=} source - the transaction type (e.g. faster payments, mastercard).\n   * If not specified, results are not filtered by source.\n   * @return {Promise} - the http request promise\n   */\n  getTransactions (accessToken = this.config.accessToken, fromDate, toDate, source) {\n    return this.transaction.getTransactions(accessToken, fromDate, toDate, source);\n  }\n\n  /**\n   * Gets the full details of a single transaction\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @param {string} transactionId - the unique transaction ID\n   * @param {string=} source - the transaction type (e.g. faster payments, mastercard).\n   * If not specified, only generic transaction information will be returned.\n   * @return {Promise} - the http request promise\n   */\n  getTransaction (accessToken = this.config.accessToken, transactionId, source) {\n    return this.transaction.getTransaction(accessToken, transactionId, source);\n  }\n\n  /**\n   * Gets the customer's current direct-debit mandates\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @return {Promise} - the http request promise\n   */\n  listMandates (accessToken = this.config.accessToken) {\n    return this.mandate.listMandates(accessToken);\n  }\n\n  /**\n   * Deletes specific direct debit mandate\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} mandateId - the unique mandate ID\n   * @return {Promise} - the http request promise\n   */\n  deleteMandate (accessToken = this.config.accessToken, mandateId) {\n    return this.mandate.deleteMandate(accessToken, mandateId);\n  }\n\n  /**\n   * Lists the customer's scheduled payments\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  listScheduledPayments (accessToken = this.config.accessToken) {\n    return this.payment.listScheduledPayments(accessToken);\n  }\n\n  /**\n   * Makes a payment on behalf of the customer to another UK bank account using the Faster Payments network\n   * @param {string} accessToken - the oauth bearer token.\n   *  @param {string} destinationAccountUid - the account identifier of the recipient\n   * @param {string} reference - The payment reference, max. 18 characters.\n   * @param {string} amount - the amount to be send.\n   * @param {string=} currency - the currency, optional, defaults to \"GBP\".\n   * @return {Promise} - the http request promise\n   */\n  makeLocalPayment (accessToken = this.config.accessToken, destinationAccountUid, reference, amount, currency = 'GBP') {\n    return this.payment.makeLocalPayment(accessToken, destinationAccountUid, reference, amount, currency);\n  }\n\n  /**\n   * Gets the customer's contacts (payees)\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  getContacts (accessToken = this.config.accessToken) {\n    return this.contact.getContacts(accessToken);\n  }\n\n  /**\n   * Gets a specific contact (payee)\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} contactId - the contact's ID.\n   * @return {Promise} - the http request promise\n   */\n  getContactAccount (accessToken = this.config.accessToken, contactId) {\n    return this.contact.getContactAccount(accessToken, contactId);\n  }\n\n  /**\n   * Creates a contact (payee) for the customer\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} name - the name of the new contact.\n   * @param {string=} accountType - the account type (domestic or international), optional and defaults to\n   *   UK_ACCOUNT_AND_SORT_CODE.\n   * @param {string} accountNumber - the contact's bank account number.\n   * @param {string} sortCode - the contact's sort code.\n   * @param {string} customerId - the customer's ID.\n   * @return {Promise} - the http request promise\n   */\n  createContact (accessToken = this.config.accessToken, name, accountType = 'UK_ACCOUNT_AND_SORT_CODE', accountNumber, sortCode, customerId) {\n    return this.contact.createContact(accessToken, name, accountType, accountNumber, sortCode, customerId);\n  }\n\n  deleteContact (accessToken, contactId) {\n    return this.contact.deleteContact(accessToken, contactId);\n  }\n\n  /**\n   * Gets a list of the customer's savings goals\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  listSavingsGoals (accessToken = this.config.accessToken) {\n    return this.savingsGoals.listSavingsGoals(accessToken);\n  }\n\n  /**\n   * Gets a specific savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID.\n   * @return {Promise} - the http request promise\n   */\n  getSavingsGoal (accessToken = this.config.accessToken, savingsGoalId) {\n    return this.savingsGoals.getSavingsGoal(accessToken, savingsGoalId);\n  }\n\n  /**\n   * Add money to a specific savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID.\n   * @param {string} transactionId - a transaction ID for this transaction\n   * @param {number} amount - an amount in minor unit\n   * @return {Promise} - the http request promise\n   */\n  addMoneyToSavingsGoal (accessToken = this.config.accessToken, savingsGoalId, transactionId, amount, currency = 'GBP') {\n    return this.savingsGoals.addMoneyToSavingsGoal(\n      accessToken,\n      savingsGoalId,\n      transactionId,\n      amount,\n      currency\n    );\n  }\n\n  /**\n   * Creates a contact (payee) for the customer\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID, generate one if creating a goal.\n   * @param {string} name - the name of the new contact.\n   * @param {string} currency - the currency of the savings goal. Defaults to 'GBP'.\n   * @param {number} targetAmount - the target amount in minor units (e.g. 1234 => £12.34).\n   * @param {string} targetCurrency - the target currency, also defaults to 'GBP'.\n   * @param {string} base64EncodedPhoto - base64 encoded image to associate with the goal. (optional)\n   * @return {Promise} - the http request promise\n   */\n  createSavingsGoal (accessToken = this.config.accessToken, savingsGoalId, name, currency = 'GBP',  targetAmount, targetCurrency = 'GBP', base64EncodedPhoto) {\n    return this.savingsGoals.createSavingsGoal(accessToken, savingsGoalId, name, currency,  targetAmount, targetCurrency, base64EncodedPhoto);\n  }\n\n  /**\n   * Deletes specific direct debit mandate\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the unique mandate ID\n   * @return {Promise} - the http request promise\n   */\n  deleteSavingsGoal (accessToken, savingsGoalId) {\n    return this.savingsGoals.deleteSavingsGoal(accessToken, savingsGoalId);\n  }\n\n  /**\n   * Gets the customer's card\n   * @param {string=} accessToken - the oauth bearer token.  If not\n   * specified, the accessToken on the options object is used.\n   * @return {Promise} - the http request promise\n   */\n  getCard (accessToken = this.config.accessToken) {\n    return this.card.getCard(accessToken);\n  }\n\n  /**\n   * Exchanges the authorization code for an access token\n   * @param {string} authorizationCode - the authorization code, acquired from the user agent after the\n   * user authenticates with starling\n   * @return {Promise} - the http request promise\n   */\n  getAccessToken (authorizationCode) {\n    return this.oAuth.getAccessToken(authorizationCode);\n  }\n\n  /**\n   * Exchanges the authorization code for an access token\n   * @param {string} refreshToken - the oauth refresh token, used to claim a new access token when the access token\n   * expires. A new refresh token is also returned.\n   * @return {Promise} - the http request promise\n   */\n  refreshAccessToken (refreshToken) {\n    return this.oAuth.refreshAccessToken(refreshToken);\n  }\n}\n\nmodule.exports = Starling;\n","export const defaultHeaders = (accessToken) => {\n  return {\n    Accept: 'application/json',\n    Authorization: `Bearer ${accessToken}`\n  };\n};\n\nexport const postHeaders = (accessToken) => {\n  return {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${accessToken}`\n  };\n};","\nconst runRules = (pos, name, rules, value) => {\n  const valueType = typeof value;\n\n  if (rules[0] == 'optional') {\n    if (value && (valueType !== rules[1])) {\n      return `${name} parameter in position ${pos} is an optional ${rules[1]} but was ${valueType}`\n    }\n  }\n  if (rules[0] == 'required') {\n    if (value && (valueType !== rules[1])) {\n      return `${name} parameter in position ${pos} is a required ${rules[1]} but was ${valueType}`\n    } else if (!value) {\n      return `${name} parameter in position ${pos} is a required ${rules[1]} but was ${value}`\n    }\n  }\n};\n\nexport const  typeValidation = (args, def) => {\n  let problems = [];\n  for (let i = 0; i < def.length; i++) {\n    const pos = i;\n    const name = def[i].name;\n    const rules = def[i].validations;\n    const value = i <= args.length ? args[i] : undefined;\n    const problem = runRules(pos, name, rules, value);\n    if (problem) problems.push(problem);\n  }\n\n  if (problems.length) {\n    throw problems;\n  }\n\n};\n\n"]}